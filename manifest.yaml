apiVersion: v1
kind: Namespace
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: development:/Namespace:/helm-guestbook
  name: helm-guestbook
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: development:/ServiceAccount:helm-guestbook/development-helm-guestbook
  labels:
    app.kubernetes.io/instance: development
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: helm-guestbook
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: helm-guestbook-0.1.0
  name: development-helm-guestbook
  namespace: helm-guestbook
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: development:/Service:helm-guestbook/development-helm-guestbook
  labels:
    app.kubernetes.io/instance: development
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: helm-guestbook
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: helm-guestbook-0.1.0
  name: development-helm-guestbook
  namespace: helm-guestbook
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/instance: development
    app.kubernetes.io/name: helm-guestbook
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: development:apps/Deployment:helm-guestbook/development-helm-guestbook
  labels:
    app.kubernetes.io/instance: development
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: helm-guestbook
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: helm-guestbook-0.1.0
  name: development-helm-guestbook
  namespace: helm-guestbook
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/instance: development
      app.kubernetes.io/name: helm-guestbook
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: development
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: helm-guestbook
        app.kubernetes.io/version: 1.16.0
        helm.sh/chart: helm-guestbook-0.1.0
    spec:
      containers:
        - image: nginx:1.16.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /
              port: http
          name: helm-guestbook
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
      serviceAccountName: development-helm-guestbook
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
    argocd.argoproj.io/tracking-id: development:batch/Job:helm-guestbook/
  generateName: app-slack-notification-
  namespace: helm-guestbook
spec:
  backoffLimit: 2
  template:
    spec:
      containers:
        - command:
            - sleep
            - "600"
          image: alpine:latest
          name: slack-notification
      restartPolicy: Never
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    argocd.argoproj.io/tracking-id: development:/Pod:/development-helm-guestbook-test-connection
    helm.sh/hook: test
  labels:
    app.kubernetes.io/instance: development
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: helm-guestbook
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: helm-guestbook-0.1.0
  name: development-helm-guestbook-test-connection
spec:
  containers:
    - args:
        - development-helm-guestbook:80
      command:
        - wget
      image: busybox
      name: wget
  restartPolicy: Never
